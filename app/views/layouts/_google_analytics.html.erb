<script>
  /**
   * Creates a temporary global ga object and loads analy  tics.js.
   * Paramenters o, a, and m are all used internally.  They could have been declared using 'var',
   * instead they are declared as parameters to save 4 bytes ('var ').
   *
   * @param {Window}      i The global context object.
   * @param {Document}    s The DOM document object.
   * @param {string}      o Must be 'script'.
   * @param {string}      g URL of the analytics.js script. Inherits protocol from page.
   * @param {string}      r Global name of analytics object.  Defaults to 'ga'.
   * @param {DOMElement?} a Async script tag.
   * @param {DOMElement?} m First script tag in document.
   */
  (function(i, s, o, g, r, a, m){
    i['GoogleAnalyticsObject'] = r; // Acts as a pointer to support renaming.

    // Creates an initial ga() function.  The queued commands will be executed once analytics.js loads.
    i[r] = i[r] || function() {
      (i[r].q = i[r].q || []).push(arguments)
    },

    // Sets the time (as an integer) this tag was executed.  Used for timing hits.
    i[r].l = 1 * new Date();

    // Insert the script tag asynchronously.  Inserts above current tag to prevent blocking in
    // addition to using the async attribute.
    a = s.createElement(o),
    m = s.getElementsByTagName(o)[0];
    a.async = 1;
    a.src = g;
    m.parentNode.insertBefore(a, m)
  })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

  ga('create', 'UA-55484543-1', 'auto'); // Creates the tracker with default parameters.
  ga('send', 'pageview');            // Sends a pageview hit.
</script>


<script type="text/javascript">
  var APEcode='C83C49FD95E9BF596178487E958B85B96C', APEtracker = APEtracker || { config: { account: "UA-55484543-1" } };
  (function(c){
    var D = document, p = D.location.protocol, s = 'script', S = D.createElement(s), b = D.getElementsByTagName(s)[0];
    S.src = [ p, '//', (('https:' == p) ? 'amikay-ape.appspot.com' : 'ape.amikay.com'), '/c/', c].join('');
    S.type = 'text/javascript'; S.async = true;
    return b.parentNode.insertBefore(S,b);
  })(APEcode);
</script>



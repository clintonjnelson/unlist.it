#quicksearch.col-xs-9

  %h3#home-search-title
    Search Unlist
    %small.text-muted#search_radius_text
      -if session[:search_radius] == "0"
        in
      -elsif session[:search_radius]
        ="within #{session[:search_radius]} miles of"
      -else
        within 100 miles of
    %small.text-muted#search_location_text
      -if session[:search_state] #if search place is set
        ="#{session[:search_city]}, #{session[:search_state]}"
      -elsif session[:search_zipcode] #if search zipcode is set
        ="#{session[:search_zipcode]}"
      -elsif signed_in? #if user
        -if current_user.location.city.present? #if user has set a place
          ="#{current_user.location.city}, #{current_user.location.state}"
        -elsif current_user.location.zipcode.present? #if user has set a zipcode
          ="#{current_user.location.zipcode}"
      -else #default to Seattle
        Seattle, WA

  %small#radius-location.text-muted
    =link_to "adjust search radius", search_radius_path, { remote: true, data: { toggle: 'modal', target: '#modal-radius' } }
    &nbsp | &nbsp
    =link_to "change location", search_location_path, { remote: true, data: { toggle: 'modal', target: '#modal-location'} }

    #modal-radius.modal.fade(role='dialog' aria-labelledby='searchRadius' aria-hidden='true')
    #modal-location.modal.fase(role='dialog' aria-labelledby='searchLocation' aria-hidden='true')

  %small.hide
    %a.search-options
      &nbsp | &nbsp
      search options

  %ul.searchform
    =form_tag search_unlistings_path, method: 'post' do
      #options-box.hide
        %p
          Filter by:
          =check_box_tag :comm_recycle, "true", ( @comm_recycle.nil? ? false : true )
          =label_tag     :comm_recycle, "community recycle"
        %p
          Search By:
          -['keyword', 'title'].each_with_index do |item, index|
            -unless index == 0
              &nbsp | &nbsp
            =radio_button_tag :search_by, item, ( @search_by.nil? ? (item == 'keyword') : (@search_by == item) )
            =label_tag "search_by_#{item}", item


        %p
          Search Type:
          -['any', 'exact'].each_with_index do |item, index|
            -unless index == 0
              &nbsp | &nbsp
            =radio_button_tag :search_type, item, ( @search_type.nil? ? (item == 'any') : (@search_type == item) )
            =label_tag "search_type_#{item}", "#{item} match"

      =text_field_tag :search_words, search_placeholder(@search_string)
      =button_tag(type: 'submit', class: "btn btn-default btn-sm search-button") do
        %i.glyphicon.glyphicon-search
      %span
        in
        =select_tag :category_id, options_for_select(category_options)

